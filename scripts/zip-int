# !/usr/bin/env bash
# If testing from a feature branch, comment out ALL other dags EXCEPT the one you are testing.

if [ $# -ne 2 ]; then
  echo "Wrong number of arguments"
  exit 1
fi

DAG_PATH=com/apple/ap/algo/dags/
mkdir -p tmp
dagLen=0
dagNm=""
zipNm=""

git fetch origin master
git diff --name-only origin/master..HEAD
for dag in $(git diff --name-only origin/master..HEAD); do
  echo "publish $dag"
 IFS="/" read -a dagArry <<<$dag
  if [[ $dag =~ "dags/" ]]; then
    dagLen=${#dagArry[@]}
    echo "dagLen: ${dagLen}"
    if [[ $dagLen -eq 2 && ! -z $zipNm ]]; then
        echo "flush zip dags from dagLen:$dagLen"
        zip "${dagNm}.zip $zipNm"
        echo "zip ${dagNm}.zip $zipNm"
    elif [[ $dagLen -eq 3 && $dagNm != ${dagArry[1]}  && -z $zipNm ]]; then
       zipNm=$dag
       dagNm=${dagArry[1]}
           elif [[ $dagLen -eq 3 && $dagNm != ${dagArry[1]}  && ! -z $zipNm ]]; then
             echo "flush zip dags from dagLen:$dagLen"
             echo "zipNm: ${zipNm}" 
             echo "dagNm: ${dagNm}"
             zip "${dagNm}.zip $zipNm"
             echo "one"
       zipNm=$dag
       dagNm=${dagArry[1]}
       fileExt="zip"
    elif [[ $dagLen -eq 3 && $dagNm == ${dagArry[1]} ]]; then
      zipNm="$zipNm $dag"
      dagNm=${dagArry[1]}
      fileExt="zip"
      echo "two"
    else
      fileExt="py"
      dag_file=${dag/dags\//""}
      dag_name=${dag_file/\.py/""}
      ci stage-lib ${dag},${DAG_PATH}${dag_name}-$1-$2.py
      echo "three"
    fi
  fi
done
echo start
ls -ltr
echo end

#ci stage-lib ${dag},${DAG_PATH}${dag_name}-$1-$2.$fileExt
#clean-up
#rm tmp-dags
